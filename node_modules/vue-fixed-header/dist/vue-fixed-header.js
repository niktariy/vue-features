'use strict';

var vuePropertyDecorator = require('vue-property-decorator');

/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
/* global Reflect, Promise */







function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

let VueFixedHeader = class VueFixedHeader extends vuePropertyDecorator.Vue {
    constructor() {
        super(...arguments);
        this.$ = () => null;
        this.check = () => null;
        this.tag = null;
    }
    mounted() {
        this.$ = (e) => document.querySelector(e);
        this.tag = this.getTargetTag();
        this.main();
    }
    getTargetTag() {
        if (navigator.userAgent.includes('Edge'))
            return 'body';
        if (navigator.userAgent.includes('Firefox/') && ((+navigator.userAgent.split('Firefox/')[1]) >= 62)) {
            return 'html';
        }
        if (!window.chrome &&
            'WebkitAppearance' in document.documentElement.style)
            return 'body';
        return 'html';
    }
    registerEvent() {
        window.addEventListener('scroll', this.check);
    }
    removeEvent() {
        window.removeEventListener('scroll', this.check);
    }
    main() {
        this.check = () => {
            const { $, tag, threshold } = this;
            if (!tag) {
                return;
            }
            this.$emit('update:fixed', $(tag).scrollTop > threshold);
        };
        this.registerEvent();
    }
    beforeDestroy() {
        this.removeEvent();
    }
    render() {
        const children = this.$slots.default;
        return children[0];
    }
};
__decorate([
    vuePropertyDecorator.Prop({ default: 0, type: Number })
], VueFixedHeader.prototype, "threshold", void 0);
VueFixedHeader = __decorate([
    vuePropertyDecorator.Component
], VueFixedHeader);
var VueFixedHeader$1 = VueFixedHeader;

module.exports = VueFixedHeader$1;
